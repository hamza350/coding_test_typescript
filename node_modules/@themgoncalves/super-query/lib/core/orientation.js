"use strict";

exports.__esModule = true;
exports.default = void 0;

var _isServer = _interopRequireDefault(require("../utils/isServer"));

var _windowMock = _interopRequireDefault(require("../utils/windowMock"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @function Orientantion
 * @module Orientantion
 * @desc A Screen Orientation management
 * @example {@lang javascript}
 * import { Orientation } from '@themgoncalves/super-query';
 * Orientation.onChange((orientation) => {
 *  console.info('Screen orientation changed to: ', orientation);
 * });
 * const isLocked = Orientation.lock('landscape-primary');
 * console.info('Screen orientation has locked to landscape-primary? ', isLocked);
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation}
 * @returns {Object}
 * @author Marcos Gon√ßalves <contact@themgoncalves.com>
 * @version 3.0.0
 * @license MIT
 */
var Orientantion = function Orientantion() {
  var _ref = _isServer.default ? _windowMock.default : window,
      screen = _ref.screen;

  var defaultOrientation = 'portrait-primary';
  var isOrientationLocked = false;

  var current = function current() {
    var orientation = screen.msOrientation || (screen.orientation || screen.mozOrientation || {}).type;
    return orientation || defaultOrientation;
  };

  var onChange = function onChange(callback) {
    window.addEventListener('orientationchange', function () {
      callback(current());
    });
  };

  var isLocked = function isLocked() {
    return isOrientationLocked;
  };

  var lock = function lock() {
    var universalLock = screen.lockOrientation || screen.mozLockOrientation || screen.msLockOrientation || function spOorientation() {
      return false;
    };

    isOrientationLocked = universalLock.apply(void 0, arguments);
    return isOrientationLocked;
  };

  var unlock = function unlock() {
    var universalUnlock = screen.unlockOrientation || screen.mozUnlockOrientation || screen.msUnlockOrientation || screen.orientation && screen.orientation.unlock || function orientation() {
      return false;
    };

    isOrientationLocked = universalUnlock();
    return isOrientationLocked;
  };

  return {
    onChange: onChange,
    current: current,
    lock: lock,
    unlock: unlock,
    isLocked: isLocked
  };
};

var _default = Orientantion();

exports.default = _default;